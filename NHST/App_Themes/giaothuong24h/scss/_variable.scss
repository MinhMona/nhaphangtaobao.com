@charset "utf-8";
//
//VARIABLE :: BEGIN
//
$main-w : 1170;
$sp-w : 700;

$gg-btn: #d62d20;
$cc-btn: #008744;
@mixin cl-bg1() {
  background-image: -moz-linear-gradient( -90deg, rgb(0, 148, 249) 0%, rgb(0, 108, 206) 100%);
  background-image: -webkit-linear-gradient( -90deg, rgb(0, 148, 249) 0%, rgb(0, 108, 206) 100%);
  background-image: -ms-linear-gradient( -90deg, rgb(0, 148, 249) 0%, rgb(0, 108, 206) 100%);
};




$color1: #0068cf;
$color2: #a1eb3d;

$nav-item: black;
$nav-bg__hover: transparent;
$nav-item__hover: $color1;
$drop-bg: white;
$drop-item-bg__hover: #f8f8f8;
$icon-bar: black;

$tog-header-bg: white;
$tog-nav-item: black;
$tog-nav-bg__hover: transparent;
$tog-nav-item__hover: $color1;
$tog-drop-item-bg__hover: #f8f8f8;
$tog-drop-item__hover: $color1;

$current-menu-item: $color1;
$current-menu-item-bg: transparent;

$primary-txt-color: black;
$text-cl2: #555555;

$font-p: 'SF UI Text', sans-serif;
$font-h: "Oswald", sans-serif;
//
//VARIABLE :: END
//


//
//MIXIN :: BEGIN
//

@mixin fz60() {
  font-size: 60px;
  @include br(930px) {
    font-size: 48px;
  }
  @include br(500px) {
    font-size: 36px;
  }
}

@mixin fz48() {
  font-size: 48px;
  @include br(930px) {
    font-size: 36px;
  }
  @include br(500px) {
    font-size: 27px;
  }
}

@mixin fz36() {
  font-size: 36px;
  @include br(780px) {
    font-size: 30px;
  }
  @include br(500px) {
    font-size: 24px;
  }
}

@mixin fz30() {
  font-size: 30px;
  @include br(780px) {
    font-size: 26px;
  }
  @include br(500px) {
    font-size: 18px;
  }
}

@mixin fz24() {
  font-size: 24px;
  @include br(500px) {
    font-size: 18px;
  }
}

@mixin fz18() {
  font-size: 18px;
  @include br(500px) {
    font-size: 16px;
  }
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
          box-shadow: $shadow;
}
@mixin coverbg() {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}
@mixin transition($s){
    -webkit-transition: all $s ease-in-out;
    -moz-transition: all $s ease-in-out;
    -o-transition: all $s ease-in-out;
    -ms-transition: all $s ease-in-out;
    transition: all $s ease-in-out;
}

@mixin btn-color($color) {
  background-color: $color;
  color: white;
  &:hover{
      color: white;
      background-color: darken($color, 10%);
  }
}

@mixin abso($t, $l) {
  position: absolute;
  top: $t;
  left: $l;
}

@mixin flex($jc: center, $al:center) {
  display: flex;
  justify-content: $jc;
  align-items: $al;
} 


@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }
  
  @media screen and (min-width: $min-vw) {
    
    @each $property in $properties {
      $value-prop: null;
      @for $i from 1 through length($min-value) {
        @if (strip-unit(nth($min-value, $i)) == 0 and strip-unit(nth($max-value, $i)) == 0) {
          $value-prop: append($value-prop, 0);
        }

        @else if (unit(nth($min-value, $i)) == 'rem') {
          $value: calc(#{nth($min-value, $i)} + #{strip-unit(nth($max-value, $i) - nth($min-value, $i)) * 10 } * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
          $value-prop: append($value-prop, $value);
        }
        @else {
          $value: calc(#{nth($min-value, $i)} + #{strip-unit(nth($max-value, $i) - nth($min-value, $i))} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
          $value-prop: append($value-prop, $value);
        }   
      }
      #{$property}: $value-prop;
    }  
  }

  @media screen and (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin br($point) {
  @media screen and (max-width: $point)  { @content; }
}  

  
//
//MIXIN :: END
//

//media template
// @include media(1199px){
//    width: 970px;   
//}
//@include media(1199px){
//    width: 970px;   
//}
//@include media(991px){
//    width: 750px;   
//}
//@include media(767px){
//    width: 100%;   
//}
%clear {
    &:after{
        content:"";
        display:table;
        clear:both;
    }
    &:before{
        display: table;
        content: " ";
    }
}



